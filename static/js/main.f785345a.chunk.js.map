{"version":3,"sources":["assets/nyt-logo.png","components/nav.jsx","components/header.jsx","components/form.jsx","components/book.jsx","components/bookList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","href","src","NytLogo","alt","Component","Header","props","format","Form","onSubmit","getBooks","type","name","placeholder","Book","state","books","_this","imageUrl","getWeeksOnList","weeksOnList","findBookCover","_callee","isbn","googleApiCall","data","regenerator_default","wrap","_context","prev","next","fetch","process","REACT_APP_GOOGLE_BOOKS_API_KEY","sent","json","console","log","stop","this","bookTitle","toUpperCase","author","publisher","description","BookList","map","book","index","key","components_book","isbns","isbn10","book_details","title","rank","weeks_on_list","App","e","formSearch","nytApiCall","target","elements","value","preventDefault","reset","setState","results","nav","components_form","header","bookList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f785345a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nyt-logo.9348e128.png\";","import React, { Component } from \"react\";\nimport NytLogo from \"../assets/nyt-logo.png\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav>\n        <div className=\"navbar-fixed\">\n          <div className=\"nav-wrapper\">\n            <a href=\"#!\" className=\"brand-logo center\">\n              <img src={NytLogo} className=\"nyt-logo\" alt=\"logo\" />\n              <p className=\"nav-best\">Books | Best Sellers</p>\n            </a>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;","import React from \"react\";\n\nconst Header = props => {\n  return <div className=\"header\">{props.format}</div>;\n};\n\nexport default Header;","import React from \"react\";\n\nconst Form = props => {\n  return (\n    <form onSubmit={props.getBooks}>\n      <input\n        className=\"form_input\"\n        type=\"text\"\n        name=\"formSearch\"\n        placeholder=\"hardcover-fiction (must include hyphens)\"\n      />\n      <button className=\"form_button\">Search</button>\n   \n    </form>\n  );\n};\n\nexport default Form;","import React, { Component } from \"react\";\n\n\nclass Book extends Component {\n  state = {\n    books: this.props,\n    imageUrl: \"\"\n  };\n\n  getWeeksOnList = () => {\n    return this.state.books.weeksOnList === 1\n      ? \"NEW THIS WEEK\"\n      : this.state.books.weeksOnList + \" WEEKS ON THE LIST\";\n  };\n\n  findBookCover = async isbn => {\n    const googleApiCall = await fetch(\n      \"https://www.googleapis.com/books/v1/volumes?q=isbn:\" +\n        isbn +\n        \"&key=\" +\n        process.env.REACT_APP_GOOGLE_BOOKS_API_KEY\n    );\n\n    const data = await googleApiCall.json();\n    console.log(\"data\", data);\n    \n\n   \n  };\n\n  render() {\n    return (\n      <li className=\"book\">\n        <p className=\"book-week\">{this.getWeeksOnList()}</p>\n        <p className=\"book-title\">{this.state.books.bookTitle.toUpperCase()}</p>\n        <p className=\"book-author\">\n          by {this.state.books.author} | {this.state.books.publisher}\n        </p>\n        <p className=\"book-description\">{this.state.books.description}</p>\n      </li>\n    );\n  }\n}\n\nexport default Book;","import React from \"react\";\nimport Book from \"./book\";\n\nconst BookList = props => {\n  return (\n    <div className=\"row bookList\">\n      <ol>\n        {props.books.map((book, index) => (\n          <div key={index}>\n            <Book\n              isbn={book.isbns[0].isbn10}\n              author={book.book_details[0].author}\n              bookTitle={book.book_details[0].title}\n              publisher={book.book_details[0].publisher}\n              description={book.book_details[0].description}\n              rank={book.rank}\n              weeksOnList={book.weeks_on_list}\n            />\n          </div>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default BookList;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/nav\";\nimport Header from \"./components/header\";\nimport Form from \"./components/form\";\nimport BookList from \"./components/bookList\";\n\nclass App extends Component {\n  state = {\n    books: [],\n    format: \"\" \n  };\n\n  \n  getBooks = async e => {\n    \n    let formSearch = e.target.elements.formSearch.value;\n    e.preventDefault();\n    e.target.reset();\n\n    \n    this.setState({ books: [] });\n\n    // make API request\n    const nytApiCall = await fetch(\n      \"https://api.nytimes.com/svc/books/v3/lists.json?list=\" +\n        formSearch + \"&api-key=X1Re6hPQP4EJxagu0y2Iy8cnmsi33kmV\"\n    );\n\n    const data = await nytApiCall.json();\n\n    \n    this.setState({ books: data.results });\n\n    \n    if (formSearch === \"hardcover-fiction\") {\n      formSearch = \"Hardcover Fiction\";\n    }\n    if (formSearch === \"hardcover-nonfiction\") {\n      formSearch = \"Hardcover Nonfiction\";\n    }\n    if (formSearch === \"combined-print-and-e-book-fiction\") {\n      formSearch = \"Combined Print & E-Book Fiction\";\n    }\n    if (formSearch === \"combined-print-and-e-book-nonfiction\") {\n      formSearch = \"Combined Print & E-Book Nonfiction\";\n    }\n    if (formSearch === \"paperback-nonfiction\") {\n      formSearch = \"Paperback Nonfiction\";\n    }\n    if (formSearch === \"advice-how-to-and-miscellaneous\") {\n      formSearch = \"Advice, How-To & Miscellaneous\";\n    }\n    if (formSearch === \"childrens-middle-grade-hardcover\") {\n      formSearch = \"Children's Middle Grade Hardcover\";\n    }\n    if (formSearch === \"young-adult-hardcover\") {\n      formSearch = \"Young Adult Hardcover\";\n    }\n\n    this.setState({ format: formSearch });\n    console.log(\"this.state.books\", this.state.books);\n    console.log(\"format\", this.state.format);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Nav />\n        <Form getBooks={this.getBooks} />\n        <Header format={this.state.format} />\n        <BookList books={this.state.books} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}